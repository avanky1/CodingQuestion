Given an array of integers, find the one that appears an odd number of times.

There will always be only one integer that appears an odd number of times.

Examples
[7] should return 7, because it occurs 1 time (which is odd).
[0] should return 0, because it occurs 1 time (which is odd).
[1,1,2] should return 2, because it occurs 1 time (which is odd).
[0,1,0,1,0] should return 0, because it occurs 3 times (which is odd).
[1,2,2,3,3,3,4,3,3,3,2,2,1] should return 4, because it appears 1 time (which is odd).


--------------------------------------------------------------------------------------------------------------

#include <iostream>
#include <vector>
using namespace std;

int main()
{
    int n;
    cout<<"Enter the size of the array: ";
    cin>>n;
    
    int arr[n];
    cout<<"Enter the elements of the array: ";
    for(int i=0;i<n;i++)
        {
            cin>>arr[i];
        }
    if(n==1)
    {
        cout<<arr[0];
    }
    
    vector<int> odd(100,0);

    for(int i=0;i<n;i++)
        {
            odd[arr[i]]++;
        }

    for(int i=0;i<odd.size();i++)
        {
            if(odd[i]%2!=0)
            {
                cout<<odd[i]<<endl;           // odd[i] ki jagah baas i hoga.. yahi wrong hai baki saab sahi hai 
            }
        }
};
